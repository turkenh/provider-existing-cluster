version: 2.1

jobs:
  build:
    machine:
      docker_layer_caching: true

    steps:
      - checkout

      - run:
          name: Update Submodules
          command: git submodule sync && git submodule update --init --recursive

      - restore_cache:
          keys:
            - vendor-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}

      - run:
          name: Prepare
          command: |
            git config --global user.name "upbound-bot"
            echo "machine github.com login upbound-bot password $GITHUB_UPBOUND_BOT" > ~/.netrc

      - run:
          name: Build validation
          command: |
            ./build/run make vendor.check
            ./build/run make -j$(nproc) build.all

      - run:
          name: Unit Tests
          command: ./build/run make -j$(nproc) test

      - run:
          name: Codecov
          command: |
            bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN -Z -f ./_output/tests/linux_amd64/coverage.txt

      - store_test_results:
          path: _output/tests

      - save_cache:
          when: on_success
          key: vendor-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
          paths:
            - vendor/
            - ".cache"
      - run:
          name: Publish
          command: |
            if [[ ${CIRCLE_TAG} == v* || ${CIRCLE_BRANCH} == master ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              VERSION_ARG=''
              if [[ ${CIRCLE_TAG} == v* ]]; then
                VERSION_ARG="VERSION=${CIRCLE_TAG}"
              fi
              ./build/run make -j$(nproc) publish BRANCH_NAME=master AWS_ACCESS_KEY_ID=${AWS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_KEY_SECRET} GIT_API_TOKEN=${GITHUB_UPBOUND_BOT}
              ./build/run make -j$(nproc) promote BRANCH_NAME=master $VERSION_ARG CHANNEL=master AWS_ACCESS_KEY_ID=${AWS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_KEY_SECRET} MUSEUM_URL=${MUSEUM_URL} MUSEUM_USER=${MUSEUM_USER} MUSEUM_PASS=${MUSEUM_PASS}
            fi

      - run:
          name: Cleanup
          when: always
          command: |
            make -j$(nproc) clean
            make -j$(nproc) prune PRUNE_HOURS=48 PRUNE_KEEP=48
            docker images

workflows:
  version: 2
  tagged-builds:
    jobs:
    - build:
        filters:
          tags:
            only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/ # Only match (v + valid semver) tags
          branches:
            ignore: /.*/
  branch-builds:
    jobs:
    - build:
        filters:
          branches:
            only: /.*/ #Build all branches
